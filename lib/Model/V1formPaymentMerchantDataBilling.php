<?php
/**
 * V1formPaymentMerchantDataBilling
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PAYCOMET REST API
 *
 * PAYCOMET API REST for customers.
 *
 * OpenAPI spec version: 2.21.0
 * Contact: tecnico@paycomet.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * V1formPaymentMerchantDataBilling Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class V1formPaymentMerchantDataBilling implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'v1form_payment_merchantData_billing';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'bill_addr_city' => 'string',
'bill_addr_country' => 'string',
'bill_addr_line1' => 'string',
'bill_addr_line2' => 'string',
'bill_addr_line3' => 'string',
'bill_addr_post_code' => 'string',
'bill_addr_state' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'bill_addr_city' => null,
'bill_addr_country' => null,
'bill_addr_line1' => null,
'bill_addr_line2' => null,
'bill_addr_line3' => null,
'bill_addr_post_code' => null,
'bill_addr_state' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bill_addr_city' => 'billAddrCity',
'bill_addr_country' => 'billAddrCountry',
'bill_addr_line1' => 'billAddrLine1',
'bill_addr_line2' => 'billAddrLine2',
'bill_addr_line3' => 'billAddrLine3',
'bill_addr_post_code' => 'billAddrPostCode',
'bill_addr_state' => 'billAddrState'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bill_addr_city' => 'setBillAddrCity',
'bill_addr_country' => 'setBillAddrCountry',
'bill_addr_line1' => 'setBillAddrLine1',
'bill_addr_line2' => 'setBillAddrLine2',
'bill_addr_line3' => 'setBillAddrLine3',
'bill_addr_post_code' => 'setBillAddrPostCode',
'bill_addr_state' => 'setBillAddrState'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bill_addr_city' => 'getBillAddrCity',
'bill_addr_country' => 'getBillAddrCountry',
'bill_addr_line1' => 'getBillAddrLine1',
'bill_addr_line2' => 'getBillAddrLine2',
'bill_addr_line3' => 'getBillAddrLine3',
'bill_addr_post_code' => 'getBillAddrPostCode',
'bill_addr_state' => 'getBillAddrState'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['bill_addr_city'] = isset($data['bill_addr_city']) ? $data['bill_addr_city'] : null;
        $this->container['bill_addr_country'] = isset($data['bill_addr_country']) ? $data['bill_addr_country'] : null;
        $this->container['bill_addr_line1'] = isset($data['bill_addr_line1']) ? $data['bill_addr_line1'] : null;
        $this->container['bill_addr_line2'] = isset($data['bill_addr_line2']) ? $data['bill_addr_line2'] : null;
        $this->container['bill_addr_line3'] = isset($data['bill_addr_line3']) ? $data['bill_addr_line3'] : null;
        $this->container['bill_addr_post_code'] = isset($data['bill_addr_post_code']) ? $data['bill_addr_post_code'] : null;
        $this->container['bill_addr_state'] = isset($data['bill_addr_state']) ? $data['bill_addr_state'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bill_addr_city
     *
     * @return string
     */
    public function getBillAddrCity()
    {
        return $this->container['bill_addr_city'];
    }

    /**
     * Sets bill_addr_city
     *
     * @param string $bill_addr_city City of delivery address.
     *
     * @return $this
     */
    public function setBillAddrCity($bill_addr_city)
    {
        $this->container['bill_addr_city'] = $bill_addr_city;

        return $this;
    }

    /**
     * Gets bill_addr_country
     *
     * @return string
     */
    public function getBillAddrCountry()
    {
        return $this->container['bill_addr_country'];
    }

    /**
     * Sets bill_addr_country
     *
     * @param string $bill_addr_country Numerical code (ISO 3166-1) of the country of the delivery address
     *
     * @return $this
     */
    public function setBillAddrCountry($bill_addr_country)
    {
        $this->container['bill_addr_country'] = $bill_addr_country;

        return $this;
    }

    /**
     * Gets bill_addr_line1
     *
     * @return string
     */
    public function getBillAddrLine1()
    {
        return $this->container['bill_addr_line1'];
    }

    /**
     * Sets bill_addr_line1
     *
     * @param string $bill_addr_line1 Delivery address, line 1
     *
     * @return $this
     */
    public function setBillAddrLine1($bill_addr_line1)
    {
        $this->container['bill_addr_line1'] = $bill_addr_line1;

        return $this;
    }

    /**
     * Gets bill_addr_line2
     *
     * @return string
     */
    public function getBillAddrLine2()
    {
        return $this->container['bill_addr_line2'];
    }

    /**
     * Sets bill_addr_line2
     *
     * @param string $bill_addr_line2 Delivery address, line 2
     *
     * @return $this
     */
    public function setBillAddrLine2($bill_addr_line2)
    {
        $this->container['bill_addr_line2'] = $bill_addr_line2;

        return $this;
    }

    /**
     * Gets bill_addr_line3
     *
     * @return string
     */
    public function getBillAddrLine3()
    {
        return $this->container['bill_addr_line3'];
    }

    /**
     * Sets bill_addr_line3
     *
     * @param string $bill_addr_line3 Delivery address, line 3
     *
     * @return $this
     */
    public function setBillAddrLine3($bill_addr_line3)
    {
        $this->container['bill_addr_line3'] = $bill_addr_line3;

        return $this;
    }

    /**
     * Gets bill_addr_post_code
     *
     * @return string
     */
    public function getBillAddrPostCode()
    {
        return $this->container['bill_addr_post_code'];
    }

    /**
     * Sets bill_addr_post_code
     *
     * @param string $bill_addr_post_code Post code of the delivery address
     *
     * @return $this
     */
    public function setBillAddrPostCode($bill_addr_post_code)
    {
        $this->container['bill_addr_post_code'] = $bill_addr_post_code;

        return $this;
    }

    /**
     * Gets bill_addr_state
     *
     * @return string
     */
    public function getBillAddrState()
    {
        return $this->container['bill_addr_state'];
    }

    /**
     * Sets bill_addr_state
     *
     * @param string $bill_addr_state State or province of the delivery address
     *
     * @return $this
     */
    public function setBillAddrState($bill_addr_state)
    {
        $this->container['bill_addr_state'] = $bill_addr_state;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
